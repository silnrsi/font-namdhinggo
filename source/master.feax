#**********************************
#  Language Systems
#**********************************

languagesystem DFLT dflt;


#**********************************
#  Glyphs
#**********************************

table GDEF {
GlyphClassDef
    @GDEF_bases, # base glyphs
    ,     # no ligature glyphs
    @GDEF_marks, # mark glyphs
    ;     # no component glyphs
 } GDEF;


#**********************************
#  Glyph classes
#**********************************

@Cons = [ka-limb kha-limb ga-limb gha-limb nga-limb ca-limb cha-limb ja-limb jha-limb yan-limb ta-limb tha-limb da-limb dha-limb na-limb
    pa-limb pha-limb ba-limb bha-limb ma-limb ya-limb ra-limb la-limb wa-limb sha-limb ssa-limb sa-limb ha-limb gyan-limb tra-limb];

@ConsRaU = [ka_subra_ukar-limb kha_subra_ukar-limb ga_subra_ukar-limb gha_subra_ukar-limb nga_subra_ukar-limb ca_subra_ukar-limb cha_subra_ukar-limb
    ja_subra_ukar-limb jha_subra_ukar-limb yan_subra_ukar-limb ta_subra_ukar-limb tha_subra_ukar-limb da_subra_ukar-limb dha_subra_ukar-limb na_subra_ukar-limb
    pa_subra_ukar-limb pha_subra_ukar-limb ba_subra_ukar-limb bha_subra_ukar-limb ma_subra_ukar-limb ya_subra_ukar-limb ra_subra_ukar-limb la_subra_ukar-limb
    wa_subra_ukar-limb sha_subra_ukar-limb ssa_subra_ukar-limb sa_subra_ukar-limb ha_subra_ukar-limb gyan_subra_ukar-limb tra_subra_ukar-limb];

@ConsU = [ka_ukar-limb kha_ukar-limb ga_ukar-limb gha_ukar-limb nga_ukar-limb ca_ukar-limb cha_ukar-limb ja_ukar-limb jha_ukar-limb yan_ukar-limb
    ta_ukar-limb tha_ukar-limb da_ukar-limb dha_ukar-limb na_ukar-limb pa_ukar-limb pha_ukar-limb ba_ukar-limb bha_ukar-limb ma_ukar-limb
    ya_ukar-limb ra_ukar-limb la_ukar-limb wa_ukar-limb sha_ukar-limb ssa_ukar-limb sa_ukar-limb ha_ukar-limb gyan_ukar-limb tra_ukar-limb];

@AllCons = [@Cons @ConsU @ConsRaU ];

@Ikar = [ikar-limb ikar_kemphreng-limb ];

@Vowels = [akar-limb ekar-limb okar-limb ];

@VowelsKem = [@Vowels kemphreng-limb ];

@YaWa = [subya-limb subwa-limb ];


#**********************************
#  Lookups
#**********************************

lookup OoAuDecomp {
  lookupflag 0;
  # The OoAuDecomp substitution rule replaces the OO and AU vowels with their visually constitutent components A plus EE or AI respectively. This is so that the 'A' portion can be positioned independently over the consonant when a Glide occurs between the consonant and the vowel.
    sub ookar-limb by akar-limb eekar-limb;
    sub aukar-limb by akar-limb aikar-limb;
} OoAuDecomp;

lookup EeAiKComp {
  lookupflag 0;
    sub eekar-limb kemphreng-limb by eekar_kemphreng-limb;
    sub aikar-limb kemphreng-limb by aikar_kemphreng-limb;
} EeAiKComp;

lookup EeAiKDecomp {
  lookupflag 0;
    sub eekar_kemphreng-limb by kemphreng-limb eekar-limb;
    sub aikar_kemphreng-limb by kemphreng-limb aikar-limb;
} EeAiKDecomp;

lookup GlideVowelComp {
  lookupflag 0;
    sub subya-limb akar-limb kemphreng-limb by subya_akar_kemphreng-limb;
    sub subya-limb ukar-limb kemphreng-limb by subya_ukar_kemphreng-limb;
    sub subya-limb ekar-limb kemphreng-limb by subya_ekar_kemphreng-limb;
    sub subya-limb okar-limb kemphreng-limb by subya_okar_kemphreng-limb;
    sub subya-limb kemphreng-limb by subya_kemphreng-limb;
    sub subya-limb akar-limb by subya_akar-limb;
    sub subya-limb ukar-limb by subya_ukar-limb;
    sub subya-limb ekar-limb by subya_ekar-limb;
    sub subya-limb okar-limb by subya_okar-limb;
    sub subwa-limb akar-limb kemphreng-limb by subwa_akar_kemphreng-limb;
    sub subwa-limb ukar-limb kemphreng-limb by subwa_ukar_kemphreng-limb;
    sub subwa-limb ekar-limb kemphreng-limb by subwa_ekar_kemphreng-limb;
    sub subwa-limb okar-limb kemphreng-limb by subwa_okar_kemphreng-limb;
    sub subwa-limb kemphreng-limb by subwa_kemphreng-limb;
    sub subwa-limb akar-limb by subwa_akar-limb;
    sub subwa-limb ukar-limb by subwa_ukar-limb;
    sub subwa-limb ekar-limb by subwa_ekar-limb;
    sub subwa-limb okar-limb by subwa_okar-limb;
} GlideVowelComp;

lookup GlideVowelDecomp {
  lookupflag 0;
    sub subya_akar_kemphreng-limb by akar-limb kemphreng-limb subya-limb;
    sub subya_ukar_kemphreng-limb by ukar-limb kemphreng-limb subya-limb;
    sub subya_ekar_kemphreng-limb by ekar-limb kemphreng-limb subya-limb;
    sub subya_okar_kemphreng-limb by okar-limb kemphreng-limb subya-limb;
    sub subya_kemphreng-limb by kemphreng-limb subya-limb;
    sub subya_akar-limb by akar-limb subya-limb;
    sub subya_ukar-limb by ukar-limb subya-limb;
    sub subya_ekar-limb by ekar-limb subya-limb;
    sub subya_okar-limb by okar-limb subya-limb;
    sub subwa_akar_kemphreng-limb by akar-limb kemphreng-limb subwa-limb;
    sub subwa_ukar_kemphreng-limb by ukar-limb kemphreng-limb subwa-limb;
    sub subwa_ekar_kemphreng-limb by ekar-limb kemphreng-limb subwa-limb;
    sub subwa_okar_kemphreng-limb by okar-limb kemphreng-limb subwa-limb;
    sub subwa_kemphreng-limb by kemphreng-limb subwa-limb;
    sub subwa_akar-limb by akar-limb subwa-limb;
    sub subwa_ukar-limb by ukar-limb subwa-limb;
    sub subwa_ekar-limb by ekar-limb subwa-limb;
    sub subwa_okar-limb by okar-limb subwa-limb;
} GlideVowelDecomp;

lookup RaUkar {
  lookupflag 0;
  # The RaUkar substitution rule replaces Consonant, Ra, Ukar with a ligature.
     sub @Cons subra-limb ukar-limb by @ConsRaU;
} RaUkar;

lookup Ukar {
  lookupflag 0;
  # The Ukar substitution rule replaces Consonant + Ukar with a ligature. It also applies to the Vowel-Carrier, which has its own ligature with ukar.
     sub @Cons ukar-limb by @ConsU;
    sub vowelcarrier-limb ukar-limb by vowelcarrier_ukar-limb;
} Ukar;

lookup IkarK {
  lookupflag 0;
  # The IkarK substitution rule replaces Ikar + Kemphreng with a ligature.
  # The ligature is then positioned properly on the base consonant via the positioning rule EO.
    sub ikar-limb kemphreng-limb by ikar_kemphreng-limb;
} IkarK;

lookup GlideIkar_target {
  lookupflag 0;
    #  subrule of type ADJUST_SINGLE
    pos @YaWa <0 0 -475 0>;
} GlideIkar_target;

lookup GlideIkar {
  lookupflag 0;
    pos @YaWa' lookup GlideIkar_target @Ikar;
} GlideIkar;

lookup IkarKWid_target { # The IkarKWid lookup target adds 110 units of width to the IkarKemphreng ligature
  lookupflag 0;
    #  subrule of type ADJUST_SINGLE
    pos ikar_kemphreng-limb <0 0 110 0>;
} IkarKWid_target;

lookup IkarKWid {
  lookupflag 0;
  # The IkarKWid lookup, applied to the Kern feature,
  # kerns the IkarKemphreng ligature when followed by a consonant with akar on it.
  # This prevents the akar from overprinting the rightmost dot of the kemphreng.
  # (The dot overhangs to the right slightly,
  # which is OK unless the following character has akar on it).
    pos ikar_kemphreng-limb' lookup IkarKWid_target @Cons akar-limb;
} IkarKWid;

lookup Akar {
  lookupflag 0;
  # The Akar positioning rule positions the Akar on all consonants, including the vowel carrier.
    pos base @U mark @_U; # was @MARK_Aabove
} Akar;

lookup Kemphreng {
  lookupflag 0;
  # The Kemphreng positioning rule positions the Kemphreng on all consonants, including the vowel carrier,
  # plus conjuncts of consonant plus Ukar and consonant plus Ra + Ukar
    pos base @K mark @_K; # was @MARK_K
} Kemphreng;

lookup EO {
  lookupflag 0;
  # The EO positioning rule positions ekar and okar on all consonants plus the vowel carrier.
    pos base @O mark @_O; # was @MARK_eo
} EO;

lookup VKem {
  lookupflag MarkAttachmentType @VowelsKem;
  # The VKem positioning rule positions the kemphreng on all upper vowels (except ikar, which has its own ligature).
  # The vowel itself is positioned on the consonant with the Akar or EO positioning rule.
    pos mark @K_MarkBase mark @_K; # was @MARK_VK
} VKem;

lookup GlideU {
  lookupflag 0;
  # The GlideU positioning rule positions the Ukar on the glides Ya and Wa.
  # (There is already a ligature for each consonant with the Ra+Ukar combination).
    pos base @G mark @_G; # was @MARK_U
} GlideU;


#**********************************
#  Features
#**********************************

feature ccmp {  # Glyph Composition/Decomposition
    script DFLT;  # Default
        language dflt;  # Default
            lookup OoAuDecomp;
            lookup EeAiKComp;
            lookup EeAiKDecomp;
            lookup GlideVowelComp;
            lookup GlideVowelDecomp;
} ccmp;

feature kern {  # Kerning
    script DFLT;  # Default
        language dflt;  # Default
            lookup GlideIkar;
            lookup IkarKWid;
} kern;

feature rlig {  # Required Ligatures
    script DFLT;  # Default
        language dflt;  # Default
            lookup RaUkar;
            lookup Ukar;
            lookup IkarK;
} rlig;

feature mark {  # Mark Positioning
    script DFLT;  # Default
        language dflt;  # Default
            lookup Akar;
            lookup Kemphreng;
            lookup EO;
} mark;

feature mkmk {  # Mark to Mark Positioning
    script DFLT;  # Default
        language dflt;  # Default
            lookup VKem;
            lookup GlideU;
} mkmk;
